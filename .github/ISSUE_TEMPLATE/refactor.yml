name: "♻️ 코드 리팩토링 (Refactor)"
description: "성능 개선, 코드 구조 변경 등 리팩토링 작업"
title: "[REFACTOR] "
labels: ["refactor"]
body:
  - type: textarea
    id: description
    attributes:
      label: "리팩토링 대상"
      description: "어떤 코드나 기능을 리팩토링하고 싶으신가요?"
      placeholder: "예: 로그인 컴포넌트의 중복 코드 제거, API 호출 로직 개선"
    validations:
      required: true

  - type: textarea
    id: reason
    attributes:
      label: "리팩토링 이유"
      description: "이 리팩토링을 통해 어떤 점이 개선되나요?"
      placeholder: "예: 코드 가독성 향상, 컴포넌트 재사용성 증대, 성능 개선"

  - type: dropdown
    id: scope
    attributes:
      label: "리팩토링 범위"
      description: "리팩토링의 범위를 선택해주세요"
      options:
        - "🔴 대규모 (전체 구조 변경)"
        - "🟠 중간 (컴포넌트/페이지 단위)"
        - "🟡 소규모 (함수/메서드 단위)"
        - "🟢 미세 (코드 스타일/네이밍)"

  - type: textarea
    id: impact
    attributes:
      label: "영향도 분석"
      description: "리팩토링이 기존 기능에 미치는 영향을 작성해주세요"
      placeholder: |
        - 기존 UI/UX 변경 여부
        - API 호출 방식 변경 여부
        - 다른 컴포넌트에 미치는 영향
        - 테스트 코드 수정 필요 여부

  - type: textarea
    id: plan
    attributes:
      label: "리팩토링 계획"
      description: "단계별 리팩토링 계획을 작성해주세요"
      placeholder: |
        1. 기존 코드 분석 및 문제점 파악
        2. 새로운 구조 설계
        3. 컴포넌트별 점진적 리팩토링
        4. 테스트 코드 작성/수정
        5. 브라우저 호환성 확인
