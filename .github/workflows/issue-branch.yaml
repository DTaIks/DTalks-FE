name: Create Branch on Issue

on:
  issues:
    types: [opened]

jobs:
  create-branch:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          persist-credentials: true

      - name: Create branch from issue
        run: |
          echo "=== 이슈 브랜치 생성 시작 ==="
          
          issue_title="${{ github.event.issue.title }}"
          issue_number="${{ github.event.issue.number }}"
          
          echo "원본 이슈 제목: $issue_title"
          echo "이슈 번호: $issue_number"
          
          # Python 스크립트 실행
          branch_name=$(python3 .github/scripts/create_branch.py)
          
          echo "생성할 브랜치 이름: $branch_name"
          
          # 브랜치 이름 유효성 검증
          if [[ -z "$branch_name" || "$branch_name" == *"_issue/" ]]; then
            echo "오류: 브랜치명이 비어있습니다. 기본 브랜치명을 사용합니다."
            branch_name="${issue_number}_issue/untitled-issue"
          fi
          
          echo "최종 브랜치 이름: $branch_name"
          echo "BRANCH_NAME=$branch_name" >> $GITHUB_ENV
          
          # Git 설정
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # 원격 URL 설정 (인증 토큰 포함)
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          
          # 브랜치 생성 및 푸시
          git checkout -b "$branch_name"
          git push origin "$branch_name"
          
          echo "브랜치 '$branch_name'이(가) 성공적으로 생성되었습니다."
        env:
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}

      - name: Notify KakaoWork
        run: |
          echo "카카오워크로 알림 전송 중"
          
          BRANCH_URL="https://github.com/${{ github.repository }}/tree/$BRANCH_NAME"
          ISSUE_URL="https://github.com/${{ github.repository }}/issues/${{ github.event.issue.number }}"
          REPO_NAME="${{ github.repository }}"
          
          # 이슈 라벨 정보 추출 (jq 오류 방지)
          LABELS="라벨 없음"
          if [ "${{ github.event.issue.labels }}" != "[]" ] && [ "${{ github.event.issue.labels }}" != "null" ]; then
            LABELS=$(echo '${{ github.event.issue.labels }}' | jq -r '.[].name' 2>/dev/null | tr '\n' ', ' | sed 's/, $//')
            if [ -z "$LABELS" ]; then
              LABELS="라벨 없음"
            fi
          fi
          
          # 이슈 작성자 정보
          AUTHOR="${{ github.event.issue.user.login }}"
          AUTHOR_URL="${{ github.event.issue.user.html_url }}"
          
          # 현재 시간 (한국 시간)
          CURRENT_TIME=$(date '+%Y-%m-%d %H:%M:%S KST')
            
          curl -X POST "${{ secrets.KAKAOWORK_WEBHOOK_URL }}" \
            -H 'Content-Type: application/json' \
            -d '{
              "text": "브랜치가 생성되었습니다 - '"$REPO_NAME"'",
              "blocks": [
                {
                  "type": "header",
                  "text": "✅ 새 브랜치가 생성되었습니다!",
                },
                {
                  "type": "text",
                  "text": "*리포지토리:* '"$REPO_NAME"'",
                  "markdown": true
                },
                {
                  "type": "text",
                  "text": "*브랜치명:* `'"$BRANCH_NAME"'`",
                  "markdown": true
                },
                {
                  "type": "text",
                  "text": "*이슈:* [#${{ github.event.issue.number }}]('"$ISSUE_URL"') - ${{ github.event.issue.title }}",
                  "markdown": true
                },
                {
                  "type": "text",
                  "text": "*작성자:* [@'"$AUTHOR"']('"$AUTHOR_URL"')",
                  "markdown": true
                },
                {
                  "type": "text",
                  "text": "*브랜치로 이동:* [클릭]('"$BRANCH_URL"')",
                  "markdown": true
                },
                {
                  "type": "text",
                  "text": "이 브랜치는 GitHub Actions에 의해 자동으로 생성되었습니다.",
                  "markdown": true
                }
              ]
            }'
